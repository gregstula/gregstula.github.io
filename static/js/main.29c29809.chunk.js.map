{"version":3,"sources":["logo.svg","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","titlebar","borderBottom","palette","divider","toolbar","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","Header","props","classes","sections","title","Toolbar","className","Typography","component","variant","color","align","noWrap","toolbarTitle","toolbarSecondary","map","section","Link","href","url","App","CssBaseline","Container","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAAe,I,4CCMTA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,SAAU,CACRC,aAAa,aAAD,OAAeF,EAAMG,QAAQC,UAE3CC,QAAS,CACPC,eAAgB,gBAChBC,UAAW,QAEbC,YAAa,CACXC,QAAST,EAAMU,QAAQ,GACvBC,WAAY,OAID,SAASC,EAAOC,GAC7B,IAAMC,EAAUhB,IACRiB,EAAoBF,EAApBE,SAAUC,EAAUH,EAAVG,MAElB,OACE,qCACA,cAACC,EAAA,EAAD,CAASC,UAAWJ,EAAQb,SAA5B,SACI,cAACkB,EAAA,EAAD,CACEC,UAAU,KACVC,QAAQ,KACRC,MAAM,UACNC,MAAM,SACNC,QAAM,EACNN,UAAWJ,EAAQW,aANrB,SAQGT,MAGL,cAACC,EAAA,EAAD,CAASG,UAAU,MAAMC,QAAQ,QAAQH,UAAWJ,EAAQY,iBAA5D,SACGX,EAASY,KAAI,SAACC,GAAD,OACZ,cAACC,EAAA,EAAD,CACEP,MAAM,UACNE,QAAM,EAENH,QAAQ,QACRS,KAAMF,EAAQG,IACdb,UAAWJ,EAAQN,YANrB,SAQGoB,EAAQZ,OALJY,EAAQZ,e,oBCpCnBD,EAAW,CACb,CAACC,MAAM,QAASe,IAAK,KACrB,CAACf,MAAO,SAAUe,IAAK,KACvB,CAACf,MAAO,WAAYe,IAAK,KACzB,CAACf,MAAO,WAAYe,IAAK,KACzB,CAACf,MAAO,SAAUe,IAAK,MAcZC,MAXf,WACE,OACI,qCACE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAWC,SAAS,KAApB,SACI,cAACvB,EAAD,CAAQI,MAAO,aAAcD,SAAUA,UCRpCqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.29c29809.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles((theme) => ({\n  titlebar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbar: {\n    justifyContent: 'space-between',\n    overflowX: 'auto',\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  const { sections, title } = props;\n\n  return (\n    <>\n    <Toolbar className={classes.titlebar}>\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          color=\"inherit\"\n          align=\"center\"\n          noWrap\n          className={classes.toolbarTitle}\n        >\n          {title}\n        </Typography>\n      </Toolbar>\n      <Toolbar component=\"nav\" variant=\"dense\" className={classes.toolbarSecondary}>\n        {sections.map((section) => (\n          <Link\n            color=\"inherit\"\n            noWrap\n            key={section.title}\n            variant=\"body2\"\n            href={section.url}\n            className={classes.toolbarLink}\n          >\n            {section.title}\n          </Link>\n        ))}\n      </Toolbar>\n    </>\n  );\n}\n","import logo from './logo.svg';\nimport './App.css';\nimport Button from '@material-ui/core/Button';\nimport Header from './components/Header';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst sections = [\n    {title:'About', url: '#'},\n    {title: 'Resume', url: '#'},\n    {title: 'Projects', url: '#'},\n    {title: 'LinkedIn', url: '#'},\n    {title: 'GitHub', url: '#'},\n];\n\nfunction App() {\n  return (\n      <>\n        <CssBaseline />\n        <Container maxWidth=\"lg\">\n            <Header title={\"Greg Stula\"} sections={sections} />\n        </Container>\n      </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}